"""empty message

Revision ID: f99af747e293
Revises: 0763d677d453
Create Date: 2025-04-02 14:06:16.446602

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f99af747e293'
down_revision = '0763d677d453'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('blood_pressure',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.Column('systolic', sa.Integer(), nullable=False),
    sa.Column('diastolic', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emergency_contacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name_contact', sa.String(length=100), nullable=False),
    sa.Column('last_name_contact', sa.String(length=100), nullable=False),
    sa.Column('relationship_type', sa.String(length=50), nullable=False),
    sa.Column('phone_contact', sa.String(length=20), nullable=False),
    sa.Column('email_contact', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('general_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('last_weight', sa.Float(precision=2), nullable=True),
    sa.Column('last_height', sa.Float(precision=2), nullable=True),
    sa.Column('BMI', sa.Float(precision=2), nullable=True),
    sa.Column('gender', sa.Enum('GENDER_MALE', 'GENDER_FEMALE', 'GENDER_NONBINARY', 'GENDER_OTHER', 'GENDER_NONE', name='gender_enum'), nullable=False),
    sa.Column('blood_type', sa.Enum('BLOOD_A_POSITIVE', 'BLOOD_A_NEGATIVE', 'BLOOD_B_POSITIVE', 'BLOOD_B_NEGATIVE', 'BLOOD_AB_POSITIVE', 'BLOOD_AB_NEGATIVE', 'BLOOD_O_POSITIVE', 'BLOOD_O_NEGATIVE', name='blood_type_enum'), nullable=True),
    sa.Column('dietary_preferences', sa.String(length=150), nullable=True),
    sa.Column('physical_activity', sa.Enum('ACTIVITY_SEDENTARY', 'ACTIVITY_LIGHT', 'ACTIVITY_MODERATE', 'ACTIVITY_INTENSE', 'ACTIVITY_ATHLETE', name='activity_level_enum'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('height',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.Column('height', sa.Float(precision=2), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.Column('kinship', sa.String(length=50), nullable=False),
    sa.Column('disease', sa.String(length=150), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pulse',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.Column('pulse', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('weight',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.Column('weight', sa.Float(precision=2), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key')
    )
    op.drop_table('weight')
    op.drop_table('pulse')
    op.drop_table('medical_history')
    op.drop_table('height')
    op.drop_table('general_data')
    op.drop_table('emergency_contacts')
    op.drop_table('blood_pressure')
    op.drop_table('users')
    # ### end Alembic commands ###
